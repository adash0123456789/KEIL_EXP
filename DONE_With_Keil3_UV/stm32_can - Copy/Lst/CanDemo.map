ARM Linker, RVCT3.1 [Build 939] for uVision [Standard]

================================================================================

Section Cross References

    stm32f10x.o(RESET) refers to stm32f10x.o(STACK) for __initial_sp
    stm32f10x.o(RESET) refers to stm32f10x.o(.text) for Reset_Handler
    stm32f10x.o(RESET) refers to can.o(.text) for USB_HP_CAN_TX_IRQHandler
    stm32f10x.o(.text) refers to entry.o($$startup$$) for __main
    lcd_4bit.o(.text) refers to lcd_4bit.o(.constdata) for SWAP_DATA
    can.o(.text) refers to stm32_init.o(.text) for stm32_GetPCLK1
    can.o(.text) refers to can.o(.data) for CAN_TxRdy
    can.o(.text) refers to can.o(.bss) for CAN_RxMsg
    candemo.o(.text) refers to lcd_4bit.o(.text) for set_cursor
    candemo.o(.text) refers to can.o(.text) for CAN_setup
    candemo.o(.text) refers to stm32_init.o(.text) for stm32_Init
    candemo.o(.text) refers to candemo.o(.data) for hex_chars
    candemo.o(.text) refers to can.o(.bss) for CAN_TxMsg
    candemo.o(.text) refers to can.o(.data) for CAN_TxRdy
    entry.o($$startup$$) refers to init.o(.text) for __init
    entry.o($$startup$$) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to entry.o($$startup$$) for __main
    init.o(.text) refers to init.o(.emb_text) for __call_main
    init.o(.text) refers to candemo.o(.text) for main


================================================================================

Removing Unused input sections from the image.

    Removing stm32f10x.o(HEAP), (0 bytes).

1 unused section(s) (total 0 bytes) removed from the image.

================================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../microlib/init/entry.s              0x00000000   Number         0  entry.o ABSOLUTE
    ../../microlib/init/handlers.c           0x00000000   Number         0  handlers.o ABSOLUTE
    ../../microlib/init/init.c               0x00000000   Number         0  init.o ABSOLUTE
    CAN.c                                    0x00000000   Number         0  can.o ABSOLUTE
    CanDemo.c                                0x00000000   Number         0  candemo.o ABSOLUTE
    LCD_4bit.c                               0x00000000   Number         0  lcd_4bit.o ABSOLUTE
    STM32F10x.s                              0x00000000   Number         0  stm32f10x.o ABSOLUTE
    STM32_Init.c                             0x00000000   Number         0  stm32_init.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x08000000   Section      236  stm32f10x.o(RESET)
    $$startup$$                              0x080000ec   Section       12  entry.o($$startup$$)
    .emb_text                                0x080000f8   Section        2  init.o(.emb_text)
    .text                                    0x080000fc   Section       28  stm32f10x.o(.text)
    .text                                    0x08000118   Section      152  stm32_init.o(.text)
    .text                                    0x080001b0   Section      728  lcd_4bit.o(.text)
    delay                                    0x080001b1   Thumb Code    14  lcd_4bit.o(.text)
    lcd_read_status                          0x080001bf   Thumb Code   168  lcd_4bit.o(.text)
    wait_while_busy                          0x08000267   Thumb Code    20  lcd_4bit.o(.text)
    lcd_write_data                           0x080002e9   Thumb Code    34  lcd_4bit.o(.text)
    .text                                    0x08000488   Section     1040  can.o(.text)
    .text                                    0x08000898   Section      508  candemo.o(.text)
    .text                                    0x08000a94   Section       44  init.o(.text)
    i.__scatterload_copy                     0x08000ac0   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08000ace   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08000ad0   Section       14  handlers.o(i.__scatterload_zeroinit)
    .constdata                               0x08000ae0   Section      128  lcd_4bit.o(.constdata)
    .data                                    0x20000000   Section       10  can.o(.data)
    CAN_filterIdx@CAN_wrFilter_0             0x20000008   Data           2  can.o(.data)
    .data                                    0x2000000c   Section       41  candemo.o(.data)
    disp_buf@val_display_0                   0x20000024   Data          17  candemo.o(.data)
    .bss                                     0x20000038   Section       32  can.o(.bss)
    STACK                                    0x20000058   Section      512  stm32f10x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$M$P$D$K$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  candemo.o ABSOLUTE
    __decompress                              - Undefined Weak Reference
    __Vectors                                0x08000000   Data           4  stm32f10x.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  entry.o($$startup$$)
    __call_main                              0x080000f9   Thumb Code     2  init.o(.emb_text)
    Reset_Handler                            0x080000fd   Thumb Code     4  stm32f10x.o(.text)
    NMI_Handler                              0x08000101   Thumb Code     2  stm32f10x.o(.text)
    HardFault_Handler                        0x08000103   Thumb Code     2  stm32f10x.o(.text)
    MemManage_Handler                        0x08000105   Thumb Code     2  stm32f10x.o(.text)
    BusFault_Handler                         0x08000107   Thumb Code     2  stm32f10x.o(.text)
    UsageFault_Handler                       0x08000109   Thumb Code     2  stm32f10x.o(.text)
    SVC_Handler                              0x0800010b   Thumb Code     2  stm32f10x.o(.text)
    DebugMon_Handler                         0x0800010d   Thumb Code     2  stm32f10x.o(.text)
    PendSV_Handler                           0x0800010f   Thumb Code     2  stm32f10x.o(.text)
    SysTick_Handler                          0x08000111   Thumb Code     2  stm32f10x.o(.text)
    ADC_IRQHandler                           0x08000113   Thumb Code     0  stm32f10x.o(.text)
    CAN_RX1_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    CAN_SCE_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel1_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel2_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel3_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel4_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel5_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel6_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel7_IRQHandler                   0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI0_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI15_10_IRQHandler                     0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI1_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI2_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI3_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI4_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    EXTI9_5_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    FLASH_IRQHandler                         0x08000113   Thumb Code     0  stm32f10x.o(.text)
    I2C1_ER_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    I2C1_EV_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    I2C2_ER_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    I2C2_EV_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    PVD_IRQHandler                           0x08000113   Thumb Code     0  stm32f10x.o(.text)
    RCC_IRQHandler                           0x08000113   Thumb Code     0  stm32f10x.o(.text)
    RTCAlarm_IRQHandler                      0x08000113   Thumb Code     0  stm32f10x.o(.text)
    RTC_IRQHandler                           0x08000113   Thumb Code     0  stm32f10x.o(.text)
    SPI1_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    SPI2_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TAMPER_IRQHandler                        0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM1_BRK_IRQHandler                      0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM1_CC_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM1_UP_IRQHandler                       0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM2_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM3_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    TIM4_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    USART1_IRQHandler                        0x08000113   Thumb Code     0  stm32f10x.o(.text)
    USART2_IRQHandler                        0x08000113   Thumb Code     0  stm32f10x.o(.text)
    USART3_IRQHandler                        0x08000113   Thumb Code     0  stm32f10x.o(.text)
    USBWakeUp_IRQHandler                     0x08000113   Thumb Code     0  stm32f10x.o(.text)
    WWDG_IRQHandler                          0x08000113   Thumb Code     0  stm32f10x.o(.text)
    stm32_Init                               0x08000119   Thumb Code   110  stm32_init.o(.text)
    stm32_GetPCLK1                           0x08000187   Thumb Code     4  stm32_init.o(.text)
    stm32_GetPCLK2                           0x0800018b   Thumb Code     4  stm32_init.o(.text)
    lcd_write_4bit                           0x0800027b   Thumb Code    76  lcd_4bit.o(.text)
    lcd_write_cmd                            0x080002c7   Thumb Code    34  lcd_4bit.o(.text)
    lcd_putchar                              0x0800030b   Thumb Code    12  lcd_4bit.o(.text)
    lcd_init                                 0x08000317   Thumb Code   158  lcd_4bit.o(.text)
    set_cursor                               0x080003b5   Thumb Code    30  lcd_4bit.o(.text)
    lcd_clear                                0x080003d3   Thumb Code    18  lcd_4bit.o(.text)
    lcd_print                                0x080003e5   Thumb Code    22  lcd_4bit.o(.text)
    lcd_bargraph                             0x080003fb   Thumb Code    52  lcd_4bit.o(.text)
    lcd_bargraphXY                           0x0800042f   Thumb Code    64  lcd_4bit.o(.text)
    CAN_setup                                0x08000489   Thumb Code   222  can.o(.text)
    CAN_start                                0x08000567   Thumb Code    30  can.o(.text)
    CAN_testmode                             0x08000585   Thumb Code    36  can.o(.text)
    CAN_waitReady                            0x080005a9   Thumb Code    22  can.o(.text)
    CAN_wrMsg                                0x080005bf   Thumb Code   202  can.o(.text)
    CAN_rdMsg                                0x08000689   Thumb Code   180  can.o(.text)
    CAN_wrFilter                             0x0800073d   Thumb Code   208  can.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x0800080d   Thumb Code    52  can.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08000841   Thumb Code    28  can.o(.text)
    Hex_Str                                  0x08000899   Thumb Code    38  candemo.o(.text)
    delay                                    0x080008bf   Thumb Code    10  candemo.o(.text)
    adc_Init                                 0x080008c9   Thumb Code    68  candemo.o(.text)
    adc_Get                                  0x0800090d   Thumb Code    28  candemo.o(.text)
    val_display                              0x08000929   Thumb Code    52  candemo.o(.text)
    can_Init                                 0x0800095d   Thumb Code    32  candemo.o(.text)
    main                                     0x0800097d   Thumb Code   164  candemo.o(.text)
    __init                                   0x08000a95   Thumb Code    30  init.o(.text)
    __scatterload_rt2                        0x08000a95   Thumb Code     0  init.o(.text)
    __scatterload_copy                       0x08000ac1   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08000acf   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08000ad1   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    SWAP_DATA                                0x08000ae0   Data          64  lcd_4bit.o(.constdata)
    UserFont                                 0x08000b20   Data          64  lcd_4bit.o(.constdata)
    Region$$Table$$Base                      0x08000b60   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08000b80   Number         0  anon$$obj.o(Region$$Table)
    CAN_TxRdy                                0x20000000   Data           4  can.o(.data)
    CAN_RxRdy                                0x20000004   Data           4  can.o(.data)
    val_Tx                                   0x2000000c   Data           4  candemo.o(.data)
    val_Rx                                   0x20000010   Data           4  candemo.o(.data)
    hex_chars                                0x20000014   Data          16  candemo.o(.data)
    CAN_TxMsg                                0x20000038   Data          16  can.o(.bss)
    CAN_RxMsg                                0x20000048   Data          16  can.o(.bss)
    __initial_sp                             0x20000258   Number         0  stm32f10x.o(STACK)


================================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00000bb8, Max: 0x00020000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00000b80, Max: 0x00020000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO            3    RESET               stm32f10x.o
    0x080000ec   0x0000000c   Code   RO          161  * $$startup$$         entry.o(mc_w.l)
    0x080000f8   0x00000002   Code   RO          167    .emb_text           init.o(mc_w.l)
    0x080000fa   0x00000002   PAD
    0x080000fc   0x0000001c   Code   RO            4    .text               stm32f10x.o
    0x08000118   0x00000098   Code   RO           11    .text               stm32_init.o
    0x080001b0   0x000002d8   Code   RO          111    .text               lcd_4bit.o
    0x08000488   0x00000410   Code   RO          124    .text               can.o
    0x08000898   0x000001fc   Code   RO          144    .text               candemo.o
    0x08000a94   0x0000002c   Code   RO          166    .text               init.o(mc_w.l)
    0x08000ac0   0x0000000e   Code   RO          171    i.__scatterload_copy  handlers.o(mc_w.l)
    0x08000ace   0x00000002   Code   RO          173    i.__scatterload_null  handlers.o(mc_w.l)
    0x08000ad0   0x0000000e   Code   RO          172    i.__scatterload_zeroinit  handlers.o(mc_w.l)
    0x08000ade   0x00000002   PAD
    0x08000ae0   0x00000080   Data   RO          112    .constdata          lcd_4bit.o
    0x08000b60   0x00000020   Data   RO          170    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000258, Max: 0x00005000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000000a   Data   RW          125    .data               can.o
    0x2000000a   0x00000002   PAD
    0x2000000c   0x00000029   Data   RW          145    .data               candemo.o
    0x20000035   0x00000003   PAD
    0x20000038   0x00000020   Zero   RW          126    .bss                can.o
    0x20000058   0x00000200   Zero   RW            1    STACK               stm32f10x.o


================================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1040         60          0         10         32       2501   can.o
       508        116          0         41          0       1747   candemo.o
       728         26        128          0          0       3718   lcd_4bit.o
       152         34          0          0          0       2095   stm32_init.o
        28          4        236          0        512       1354   stm32f10x.o

    ------------------------------------------------------------------------
      2456        240        396         56        544      11416   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          0          5          0          1   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        12          4          0          0          0          0   entry.o
        30          0          0          0          0          0   handlers.o
        46         14          0          0          0          0   init.o

    ------------------------------------------------------------------------
        92         18          0          0          0          0   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

        88         18          0          0          0          0   mc_w.l

    ------------------------------------------------------------------------
        92         18          0          0          0          0   Library Totals

    ------------------------------------------------------------------------

================================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2548        258        396         56        544      11416   Grand Totals
      2548        258        396         56        544      11416   ELF Image Totals
      2548        258        396         56          0          0   ROM Totals

================================================================================

    Total RO  Size (Code + RO Data)                 2944 (   2.88kB)
    Total RW  Size (RW Data + ZI Data)               600 (   0.59kB)
    Total ROM Size (Code + RO Data + RW Data)       3000 (   2.93kB)

================================================================================

